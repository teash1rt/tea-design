import{d as u,O as f,o as A,p as R,r as B,a as v,x as F,b as p,F as b,_ as x,h as P,aa as q,ab as T,ac as _,E as S,G as I,t as M,a9 as D}from"./chunks/framework.I9jlRtwA.js";const j=u({__name:"demo",setup(C){const s={style:{canvasWidth:850,canvasHeight:350}};return(E,k)=>{const a=f("t-graph");return A(),R(a,{context:s})}}}),G=u({__name:"heapSort",setup(C){const s=B(null),E=[];for(let n=0;n<8;n++)E.push({x:240+n*60,y:40});const k={style:{canvasWidth:850,canvasHeight:600},point:{pointCount:8,initialPosition:E,content:[6,2,1,3,5,4,7,0],withoutRepulsion:!0},edge:{connectionStatus:[]}},a=[[6,0],[2,1],[1,2],[3,3],[5,4],[4,5],[7,6],[0,7]],c=(n,i)=>({x:50+750*(2*i-1)/(1<<n),y:80*n+40}),t=async(n,i)=>{let h=i;const e=2*i+1,d=2*i+2;e<n&&a[e][0]>a[h][0]&&(h=e),d<n&&a[d][0]>a[h][0]&&(h=d),h!==i&&([a[i],a[h]]=[a[h],a[i]],await s.value.shallowSwap(a[i][1],a[h][1]),await s.value.wait(.3),await t(n,h))};let r,o=!1;const g=async()=>{if(o)return;o=!0,s.value.lock(!0),r=s.value.setText("初始化堆",{x:380,y:500}),await s.value.wait(1);let n=0;for(let i=1;i<=Math.floor(Math.log2(a.length))+1;i++)for(let h=0;h<1<<i-1&&n<a.length;h++,n++){const e=c(i,h+1);await s.value.moveTo(n,e)}await s.value.wait(1);for(let i=0;i<a.length;i++)s.value.addEdge(i,2*i+1),s.value.addEdge(i,2*i+2);s.value.delText(r),r=s.value.setText("构建最大堆",{x:360,y:500}),await s.value.wait(1);for(let i=Math.floor(a.length/2)-1;i>=0;i--)await t(a.length,i);s.value.delText(r),r=s.value.setText("交换堆顶和堆底后取出堆底并调整最大堆",{x:150,y:500}),await s.value.wait(1);for(let i=a.length-1;i>0;i--){await s.value.wait(.3),await Promise.all([s.value.blink(a[0][1],1),s.value.blink(a[i][1],1)]),await s.value.shallowSwap(a[0][1],a[i][1]),await s.value.wait(.3);for(let h of s.value.getConnectedPoints(a[0][1]))s.value.delEdge(a[0][1],h),await s.value.moveTo(a[0][1],{x:240+i*60,y:40}),await s.value.wait(.3);[a[0],a[i]]=[a[i],a[0]],await t(i,0)}await s.value.moveTo(a[0][1],{x:240,y:40}),s.value.lock(!1),o=!1};return(n,i)=>{const h=f("t-graph");return A(),v(b,null,[F(h,{ref_key:"graphRef",ref:s,context:k},null,512),p("button",{onClick:g},"开始排序")],64)}}}),H=x(G,[["__scopeId","data-v-64091f8e"]]),N=u({__name:"bubbleSort",setup(C){const s=B(null),E={style:{canvasWidth:850,canvasHeight:600},point:{pointCount:0,initialPosition:[]},edge:{connectionStatus:[]}},k=()=>{const g=[];for(let n=0;n<8;n++)g.push({x:160+n*80,y:250});return g},a=[{content:"冒泡排序算法演示",position:{x:320,y:200}},{content:"冒泡排序核心代码",position:{x:320,y:100}},{content:"for (let i = 0; i < array.length - 1; i++) {",position:{x:100,y:150}},{content:"    for (let j = 0; j < array.length - 1 - i; j++) {",position:{x:100,y:200}},{content:"        if (array[j] > array[j + 1]) {",position:{x:100,y:250}},{content:"            [array[j], array[j + 1]] = [array[j + 1], array[j]]",position:{x:100,y:300}},{content:"        }",position:{x:100,y:350}},{content:"    }",position:{x:100,y:400}},{content:"}",position:{x:100,y:450}},{content:"时间复杂度",position:{x:260,y:500}},{content:" O(n²) ",position:{x:450,y:500}}],c=[45,78,21,92,64,10,37,53],t=[];P(()=>{t.push(s.value.setText(a[0].content,a[0].position,void 0,void 0,!0))});let r=!1;const o=async()=>{if(r)return;r=!0,s.value.delText(t[0]),t.push(s.value.setText(a[1].content,a[1].position)),await s.value.wait(2);for(let i=2;i<9;i++)t.push(s.value.setText(a[i].content,a[i].position,void 0,"25px Verdana"));await s.value.wait(4),s.value.setTextColor(t[2],"#f98a7b",15,37),s.value.setTextColor(t[3],"#f98a7b",20,44),await s.value.wait(2),t.push(s.value.setText(a[9].content,a[9].position)),await s.value.wait(2),t.push(s.value.setText(a[10].content,a[10].position,"#7dc7f4","bold italic 35px Arial")),await s.value.wait(4);for(let i=1;i<a.length;i++)s.value.delText(t[i]);await s.value.wait(2);const g=k();for(let i=0;i<8;i++)s.value.addPoint(c[i],g[i]);const n=[[45,0],[78,1],[21,2],[92,3],[64,4],[10,5],[37,6],[53,7]];s.value.lock(!0);for(let i=0;i<n.length-1;i++)for(let h=0;h<n.length-1-i;h++)await Promise.all([s.value.blink(n[h][1],1,"#da75d8","#da75d8","#000000"),s.value.blink(n[h+1][1],1,"#da75d8","#da75d8","#000000")]),n[h][0]>n[h+1][0]&&(await s.value.wait(.5),await s.value.swap(n[h][1],n[h+1][1]),[n[h],n[h+1]]=[n[h+1],n[h]]);s.value.lock(!1),r=!1};return(g,n)=>{const i=f("t-graph");return A(),v(b,null,[F(i,{ref_key:"graphRef",ref:s,context:E},null,512),p("button",{onClick:o},"开始排序")],64)}}}),V=x(N,[["__scopeId","data-v-575f5aa2"]]),w=C=>(S("data-v-5dc30581"),C=C(),I(),C),W={class:"box"},O=w(()=>p("div",{for:"bfs"},"bfs",-1)),z=w(()=>p("div",{for:"dfs"},"dfs",-1)),J=u({__name:"search",setup(C){const s=B("bfs"),E=B(null),k=B(null),c={style:{canvasWidth:850,canvasHeight:600},point:{pointCount:7,initialPosition:[{x:380,y:100},{x:280,y:250},{x:480,y:250},{x:480,y:550},{x:180,y:400},{x:580,y:400},{x:380,y:400}],content:[0,1,2,3,4,5,6]},edge:{connectionStatus:[[0,1],[1,2],[0,2],[3,6],[6,4],[2,6],[5,3],[1,4]]}};let t=!1;const r=()=>{E.value!==null&&!Number.isNaN(E.value)&&E.value>=0&&E.value<8&&!t&&(t=!0,s.value==="bfs"?o(Number(E.value)):g(Number(E.value)))},o=async n=>{const i=k.value.getGraph(),h=[{idx:n,from:null,dis:0}],e=Array(7).fill(!1),d={};for(e[n]=!0,k.value.setPointColor(n,"#0ea0cd","#ffffff","#000000"),await k.value.wait(.5);h.length;){const l=h.shift();for(let y of i[l.idx])e[y]||(h.push({idx:y,from:l.idx,dis:l.dis+1}),String(l.dis+1)in d?d[l.dis+1].push({idx:y,from:l.idx,dis:l.dis+1}):d[l.dis+1]=[{idx:y,from:l.idx,dis:l.dis+1}],e[y]=!0)}for(let l of Object.keys(d)){const y=[];for(let m of d[Number(l)])m.from&&y.push(k.value.renderEdge(m.from,m.idx,"#0ea0cd"));await Promise.all(y),await k.value.wait(.2);for(let m of d[Number(l)])k.value.setPointColor(m.idx,"#0ea0cd","#ffffff","#000000",!0)}await k.value.wait(2);for(let l of Object.keys(d))for(let y of d[Number(l)])y.from&&k.value.setEdgeColor(y.from,y.idx,"#000000",!0);for(let l=0;l<7;l++)k.value.setPointColor(l,"#000000","#ffffff","#000000",!0);t=!1},g=async n=>{const i=k.value.getGraph(),h=[{idx:n,from:null}],e=Array(7).fill(!1);k.value.setPointColor(n,"#0ea0cd","#ffffff","#000000"),await k.value.wait(.5);const d=[];for(;h.length;){const l=h.pop();if(!e[l.idx]){l.from!==null&&(await k.value.renderEdge(l.from,l.idx,"#0ea0cd"),await k.value.wait(.2),k.value.setPointColor(l.idx,"#0ea0cd","#ffffff","#000000",!0),d.push([l.from,l.idx])),e[l.idx]=!0;for(let y of i[l.idx])e[y]||h.push({idx:y,from:l.idx})}}await k.value.wait(2);for(let l of d)k.value.setEdgeColor(l[0],l[1],"#000000",!0);for(let l=0;l<7;l++)k.value.setPointColor(l,"#000000","#ffffff","#000000",!0);t=!1};return(n,i)=>{const h=f("t-graph");return A(),v(b,null,[F(h,{ref_key:"graphRef",ref:k,context:c},null,512),p("div",W,[q(p("input",{type:"text",placeholder:" 输入起始点","onUpdate:modelValue":i[0]||(i[0]=e=>E.value=e)},null,512),[[T,E.value]]),q(p("input",{type:"radio",name:"options",value:"bfs","onUpdate:modelValue":i[1]||(i[1]=e=>s.value=e)},null,512),[[_,s.value]]),O,q(p("input",{type:"radio",name:"options",value:"dfs","onUpdate:modelValue":i[2]||(i[2]=e=>s.value=e)},null,512),[[_,s.value]]),z,p("button",{onClick:r},"开始搜索")])],64)}}}),U=x(J,[["__scopeId","data-v-5dc30581"]]),$=u({__name:"pointSettings",setup(C){const s=B(null),E={style:{canvasWidth:850,canvasHeight:350},point:{pointCount:4,initialPosition:[{x:300,y:250},{x:500,y:250},{x:300,y:50},{x:500,y:50}],content:["A","B","C","D"]},edge:{connectionStatus:[[0,1],[0,2],[1,3],[0,3],[1,2]]}};let k=3;const a=()=>{k+=1,s.value.addPoint("P",{x:Math.random()*800,y:Math.random()*300},"#ff9db1")},c=()=>{s.value.delPoint(k),k-=1},t=async()=>{await s.value.moveTo(0,{x:Math.random()*800,y:Math.random()*300})},r=async()=>{await s.value.swap(0,3)},o=async()=>{await s.value.shallowSwap(0,3)},g=()=>{s.value.setPointColor(0,"#91c350","#91c350","#e7e7e7")},n=async()=>{await s.value.blink(1,3,"#f39ec3","#f39ec3","#ffffff")},i=()=>{s.value.setContent(2,Math.floor(Math.random()*10))};return(h,e)=>{const d=f("t-graph");return A(),v(b,null,[F(d,{ref_key:"graphRef",ref:s,context:E},null,512),p("button",{onClick:a},"增加点"),p("button",{onClick:c},"删除点"),p("button",{onClick:t},"移动"),p("button",{onClick:r},"交换"),p("button",{onClick:o},"浅交换"),p("button",{onClick:g},"样式"),p("button",{onClick:n},"闪烁"),p("button",{onClick:i},"描述信息")],64)}}}),Z=x($,[["__scopeId","data-v-226c219f"]]),L=u({__name:"edgeSettings",setup(C){const s=B(null),E={style:{canvasWidth:850,canvasHeight:350},point:{pointCount:4,initialPosition:[{x:300,y:100},{x:500,y:100},{x:300,y:250},{x:500,y:250}],content:[0,1,2,3]},edge:{connectionStatus:[[0,1],[0,2],[1,2]]}},k=()=>{s.value.addEdge(2,3,"#ff0000")},a=()=>{s.value.delEdge(0,1)},c=()=>{s.value.setEdgeColor(1,2,"#a986ff")},t=()=>{s.value.renderEdge(2,0,"#e3008c")};return(r,o)=>{const g=f("t-graph");return A(),v(b,null,[F(g,{ref_key:"graphRef",ref:s,context:E},null,512),p("button",{onClick:k},"增加边"),p("button",{onClick:a},"删除边"),p("button",{onClick:c},"样式"),p("button",{onClick:t},"渲染")],64)}}}),K=x(L,[["__scopeId","data-v-ec2ed29a"]]),Y=u({__name:"textSettings",setup(C){const s=B(null),E={style:{canvasWidth:850,canvasHeight:350},point:{pointCount:0,initialPosition:[]},edge:{connectionStatus:[]}};let k;const a=()=>{k=s.value.setText("这是一段测试文字",{x:300,y:100})},c=()=>{s.value.delText(k)},t=()=>{s.value.setTextColor(k,"#0000ff",4,5)};return(r,o)=>{const g=f("t-graph");return A(),v(b,null,[F(g,{ref_key:"graphRef",ref:s,context:E},null,512),p("button",{onClick:a},"显示文字"),p("button",{onClick:c},"删除文字"),p("button",{onClick:t},"样式")],64)}}}),Q=x(Y,[["__scopeId","data-v-8d0b7c8e"]]),X=u({__name:"lock",setup(C){const s=B(null),E={style:{canvasWidth:850,canvasHeight:350}},k=B("unlocked"),a=()=>{k.value==="unlocked"?(s.value.lock(!0),k.value="locked"):(s.value.lock(!1),k.value="unlocked")};return(c,t)=>{const r=f("t-graph");return A(),v(b,null,[F(r,{ref_key:"graphRef",ref:s,context:E},null,512),p("button",{onClick:a},M(k.value),1)],64)}}}),ss=x(X,[["__scopeId","data-v-32ae8d56"]]),is=D("",5),as={class:"card"},ns=D("",3),hs={class:"card"},ks=D("",2),ls={class:"card"},ps=D("",2),ts={class:"card"},Es=D("",6),es={class:"card"},rs=D("",27),ds={class:"card"},gs=D("",27),ys={class:"card"},Fs=D("",14),Cs={class:"card"},cs=D("",7),As=JSON.parse('{"title":"节点图 Graph","description":"","frontmatter":{},"headers":[],"relativePath":"components/graph/index.md","filePath":"components/graph/index.md"}'),os={name:"components/graph/index.md"},Ds=Object.assign(os,{setup(C){return(s,E)=>(A(),v("div",null,[is,p("div",as,[F(j)]),ns,p("div",hs,[F(H)]),ks,p("div",ls,[F(U)]),ps,p("div",ts,[F(V)]),Es,p("div",es,[F(Z)]),rs,p("div",ds,[F(K)]),gs,p("div",ys,[F(Q)]),Fs,p("div",Cs,[F(ss)]),cs]))}});export{As as __pageData,Ds as default};
