import{d as h,C as v,o as f,b as P,h as A,c as b,H as C,k as t,F as x,_ as m,j as _,a1 as k,a2 as S,a3 as R,p as T,m as I,t as M,Q as D}from"./chunks/framework.8fdb7d35.js";const j=h({__name:"demo",setup(u){const s={style:{canvasWidth:850,canvasHeight:350}};return(r,o)=>{const a=v("t-graph");return f(),P(a,{context:s})}}}),G=h({__name:"heapSort",setup(u){const s=A(null),r=[];for(let l=0;l<8;l++)r.push({x:240+l*60,y:40});const o={style:{canvasWidth:850,canvasHeight:600},point:{pointCount:8,initialPosition:r,content:[6,2,1,3,5,4,7,0],withoutRepulsion:!0},edge:{connectionStatus:[]}},a=[[6,0],[2,1],[1,2],[3,3],[5,4],[4,5],[7,6],[0,7]],B=(l,n)=>({x:50+750*(2*n-1)/(1<<l),y:80*l+40}),c=async(l,n)=>{let p=n;const E=2*n+1,i=2*n+2;E<l&&a[E][0]>a[p][0]&&(p=E),i<l&&a[i][0]>a[p][0]&&(p=i),p!==n&&([a[n],a[p]]=[a[p],a[n]],await s.value.shallowSwap(a[n][1],a[p][1]),await s.value.wait(.3),await c(l,p))};let y,g=!1;const F=async()=>{if(g)return;g=!0,s.value.lock(!0),y=s.value.setText("初始化堆",{x:380,y:500}),await s.value.wait(1);let l=0;for(let n=1;n<=Math.floor(Math.log2(a.length))+1;n++)for(let p=0;p<1<<n-1&&l<a.length;p++,l++){const E=B(n,p+1);await s.value.moveTo(l,E)}await s.value.wait(1);for(let n=0;n<a.length;n++)s.value.addEdge(n,2*n+1),s.value.addEdge(n,2*n+2);s.value.delText(y),y=s.value.setText("构建最大堆",{x:360,y:500}),await s.value.wait(1);for(let n=Math.floor(a.length/2)-1;n>=0;n--)await c(a.length,n);s.value.delText(y),y=s.value.setText("交换堆顶和堆底后取出堆底并调整最大堆",{x:150,y:500}),await s.value.wait(1);for(let n=a.length-1;n>0;n--){await s.value.wait(.3),await Promise.all([s.value.blink(a[0][1],1),s.value.blink(a[n][1],1)]),await s.value.shallowSwap(a[0][1],a[n][1]),await s.value.wait(.3);for(let p of s.value.getConnectedPoints(a[0][1]))s.value.delEdge(a[0][1],p),await s.value.moveTo(a[0][1],{x:240+n*60,y:40}),await s.value.wait(.3);[a[0],a[n]]=[a[n],a[0]],await c(n,0)}await s.value.moveTo(a[0][1],{x:240,y:40}),s.value.lock(!1),g=!1};return(l,n)=>{const p=v("t-graph");return f(),b(x,null,[C(p,{ref_key:"graphRef",ref:s,context:o},null,512),t("button",{onClick:F},"开始排序")],64)}}});const H=m(G,[["__scopeId","data-v-64091f8e"]]),W=h({__name:"bubbleSort",setup(u){const s=A(null),r={style:{canvasWidth:850,canvasHeight:600},point:{pointCount:0,initialPosition:[]},edge:{connectionStatus:[]}},o=()=>{const F=[];for(let l=0;l<8;l++)F.push({x:160+l*80,y:250});return F},a=[{content:"冒泡排序算法演示",position:{x:320,y:200}},{content:"冒泡排序核心代码",position:{x:320,y:100}},{content:"for (let i = 0; i < array.length - 1; i++) {",position:{x:100,y:150}},{content:"    for (let j = 0; j < array.length - 1 - i; j++) {",position:{x:100,y:200}},{content:"        if (array[j] > array[j + 1]) {",position:{x:100,y:250}},{content:"            [array[j], array[j + 1]] = [array[j + 1], array[j]]",position:{x:100,y:300}},{content:"        }",position:{x:100,y:350}},{content:"    }",position:{x:100,y:400}},{content:"}",position:{x:100,y:450}},{content:"时间复杂度",position:{x:260,y:500}},{content:" O(n²) ",position:{x:450,y:500}}],B=[45,78,21,92,64,10,37,53],c=[];_(()=>{c.push(s.value.setText(a[0].content,a[0].position,void 0,void 0,!0))});let y=!1;const g=async()=>{if(y)return;y=!0,s.value.delText(c[0]),c.push(s.value.setText(a[1].content,a[1].position)),await s.value.wait(2);for(let n=2;n<9;n++)c.push(s.value.setText(a[n].content,a[n].position,void 0,"25px Verdana"));await s.value.wait(4),s.value.setTextColor(c[2],"#f98a7b",15,37),s.value.setTextColor(c[3],"#f98a7b",20,44),await s.value.wait(2),c.push(s.value.setText(a[9].content,a[9].position)),await s.value.wait(2),c.push(s.value.setText(a[10].content,a[10].position,"#7dc7f4","bold italic 35px Arial")),await s.value.wait(4);for(let n=1;n<a.length;n++)s.value.delText(c[n]);await s.value.wait(2);const F=o();for(let n=0;n<8;n++)s.value.addPoint(B[n],F[n]);const l=[[45,0],[78,1],[21,2],[92,3],[64,4],[10,5],[37,6],[53,7]];s.value.lock(!0);for(let n=0;n<l.length-1;n++)for(let p=0;p<l.length-1-n;p++)await Promise.all([s.value.blink(l[p][1],1,"#da75d8","#da75d8","#000000"),s.value.blink(l[p+1][1],1,"#da75d8","#da75d8","#000000")]),l[p][0]>l[p+1][0]&&(await s.value.wait(.5),await s.value.swap(l[p][1],l[p+1][1]),[l[p],l[p+1]]=[l[p+1],l[p]]);s.value.lock(!1),y=!1};return(F,l)=>{const n=v("t-graph");return f(),b(x,null,[C(n,{ref_key:"graphRef",ref:s,context:r},null,512),t("button",{onClick:g},"开始排序")],64)}}});const N=m(W,[["__scopeId","data-v-575f5aa2"]]),w=u=>(T("data-v-b2468ac7"),u=u(),I(),u),V={class:"box"},z=w(()=>t("div",{for:"bfs"},"bfs",-1)),O=w(()=>t("div",{for:"dfs"},"dfs",-1)),J=h({__name:"search",setup(u){const s=A("bfs"),r=A(null),o=A(null),B={style:{canvasWidth:850,canvasHeight:600},point:{pointCount:7,initialPosition:[{x:380,y:100},{x:280,y:250},{x:480,y:250},{x:480,y:550},{x:180,y:400},{x:580,y:400},{x:380,y:400}],content:[0,1,2,3,4,5,6]},edge:{connectionStatus:[[0,1],[1,2],[0,2],[3,6],[6,4],[2,6],[5,3],[1,4]]}};let c=!1;const y=()=>{r.value!==null&&!Number.isNaN(r.value)&&r.value>=0&&r.value<8&&!c&&(c=!0,s.value==="bfs"?g(Number(r.value)):F(Number(r.value)))},g=async l=>{const n=o.value.getGraph(),p=[{idx:l,from:null,dis:0}],E=Array(7).fill(!1),i={};for(E[l]=!0,o.value.setPointColor(l,"#0ea0cd","#ffffff","#000000"),await o.value.wait(.5);p.length;){const e=p.shift();for(let d of n[e.idx])E[d]||(p.push({idx:d,from:e.idx,dis:e.dis+1}),String(e.dis+1)in i?i[e.dis+1].push({idx:d,from:e.idx,dis:e.dis+1}):i[e.dis+1]=[{idx:d,from:e.idx,dis:e.dis+1}],E[d]=!0)}for(let e of Object.keys(i)){const d=[];for(let q of i[e])d.push(o.value.renderEdge(q.from,q.idx,"#0ea0cd"));await Promise.all(d),await o.value.wait(.2);for(let q of i[e])o.value.setPointColor(q.idx,"#0ea0cd","#ffffff","#000000",!0)}await o.value.wait(2);for(let e of Object.keys(i))for(let d of i[e])o.value.setEdgeColor(d.from,d.idx,"#000000",!0);for(let e=0;e<7;e++)o.value.setPointColor(e,"#000000","#ffffff","#000000",!0);c=!1},F=async l=>{const n=o.value.getGraph(),p=[{idx:l,from:null}],E=Array(7).fill(!1);o.value.setPointColor(l,"#0ea0cd","#ffffff","#000000"),await o.value.wait(.5);const i=[];for(;p.length;){const e=p.pop();if(!E[e.idx]){e.from!==null&&(await o.value.renderEdge(e.from,e.idx,"#0ea0cd"),await o.value.wait(.2),o.value.setPointColor(e.idx,"#0ea0cd","#ffffff","#000000",!0),i.push([e.from,e.idx])),E[e.idx]=!0;for(let d of n[e.idx])E[d]||p.push({idx:d,from:e.idx})}}await o.value.wait(2);for(let e of i)o.value.setEdgeColor(e[0],e[1],"#000000",!0);for(let e=0;e<7;e++)o.value.setPointColor(e,"#000000","#ffffff","#000000",!0);c=!1};return(l,n)=>{const p=v("t-graph");return f(),b(x,null,[C(p,{ref_key:"graphRef",ref:o,context:B},null,512),t("div",V,[k(t("input",{type:"text",placeholder:" 输入起始点","onUpdate:modelValue":n[0]||(n[0]=E=>r.value=E)},null,512),[[S,r.value]]),k(t("input",{type:"radio",name:"options",value:"bfs","onUpdate:modelValue":n[1]||(n[1]=E=>s.value=E)},null,512),[[R,s.value]]),z,k(t("input",{type:"radio",name:"options",value:"dfs","onUpdate:modelValue":n[2]||(n[2]=E=>s.value=E)},null,512),[[R,s.value]]),O,t("button",{onClick:y},"开始搜索")])],64)}}});const Y=m(J,[["__scopeId","data-v-b2468ac7"]]),L=h({__name:"pointSettings",setup(u){const s=A(null),r={style:{canvasWidth:850,canvasHeight:350},point:{pointCount:4,initialPosition:[{x:300,y:250},{x:500,y:250},{x:300,y:50},{x:500,y:50}],content:["A","B","C","D"]},edge:{connectionStatus:[[0,1],[0,2],[1,3],[0,3],[1,2]]}};let o=3;const a=()=>{o+=1,s.value.addPoint("P",{x:Math.random()*800,y:Math.random()*300},"#ff9db1")},B=()=>{s.value.delPoint(o),o-=1},c=async()=>{await s.value.moveTo(0,{x:Math.random()*800,y:Math.random()*300})},y=async()=>{await s.value.swap(0,3)},g=async()=>{await s.value.shallowSwap(0,3)},F=()=>{s.value.setPointColor(0,"#91c350","#91c350","#e7e7e7")},l=async()=>{await s.value.blink(1,3,"#f39ec3","#f39ec3","#ffffff")},n=()=>{s.value.setContent(2,Math.floor(Math.random()*10))};return(p,E)=>{const i=v("t-graph");return f(),b(x,null,[C(i,{ref_key:"graphRef",ref:s,context:r},null,512),t("button",{onClick:a},"增加点"),t("button",{onClick:B},"删除点"),t("button",{onClick:c},"移动"),t("button",{onClick:y},"交换"),t("button",{onClick:g},"浅交换"),t("button",{onClick:F},"样式"),t("button",{onClick:l},"闪烁"),t("button",{onClick:n},"描述信息")],64)}}});const $=m(L,[["__scopeId","data-v-226c219f"]]),Z=h({__name:"edgeSettings",setup(u){const s=A(null),r={style:{canvasWidth:850,canvasHeight:350},point:{pointCount:4,initialPosition:[{x:300,y:100},{x:500,y:100},{x:300,y:250},{x:500,y:250}],content:[0,1,2,3]},edge:{connectionStatus:[[0,1],[0,2],[1,2]]}},o=()=>{s.value.addEdge(2,3,"#ff0000")},a=()=>{s.value.delEdge(0,1)},B=()=>{s.value.setEdgeColor(1,2,"#a986ff")},c=()=>{s.value.renderEdge(2,0,"#e3008c",3)};return(y,g)=>{const F=v("t-graph");return f(),b(x,null,[C(F,{ref_key:"graphRef",ref:s,context:r},null,512),t("button",{onClick:o},"增加边"),t("button",{onClick:a},"删除边"),t("button",{onClick:B},"样式"),t("button",{onClick:c},"渲染")],64)}}});const X=m(Z,[["__scopeId","data-v-ed72424f"]]),U=h({__name:"textSettings",setup(u){const s=A(null),r={style:{canvasWidth:850,canvasHeight:350},point:{pointCount:0,initialPosition:[]},edge:{connectionStatus:[]}};let o;const a=()=>{o=s.value.setText("这是一段测试文字",{x:300,y:100})},B=()=>{s.value.delText(o)},c=()=>{s.value.setTextColor(o,"#0000ff",4,5)};return(y,g)=>{const F=v("t-graph");return f(),b(x,null,[C(F,{ref_key:"graphRef",ref:s,context:r},null,512),t("button",{onClick:a},"显示文字"),t("button",{onClick:B},"删除文字"),t("button",{onClick:c},"样式")],64)}}});const Q=m(U,[["__scopeId","data-v-8d0b7c8e"]]),K=h({__name:"lock",setup(u){const s=A(null),r={style:{canvasWidth:850,canvasHeight:350}},o=A("unlocked"),a=()=>{o.value==="unlocked"?(s.value.lock(!0),o.value="locked"):(s.value.lock(!1),o.value="unlocked")};return(B,c)=>{const y=v("t-graph");return f(),b(x,null,[C(y,{ref_key:"graphRef",ref:s,context:r},null,512),t("button",{onClick:a},M(o.value),1)],64)}}});const ss=m(K,[["__scopeId","data-v-32ae8d56"]]),ns=D("",5),as={class:"card"},ls=D("",3),ps={class:"card"},os=D("",2),es={class:"card"},ts=D("",2),cs={class:"card"},rs=D("",6),Es={class:"card"},ys=D("",27),is={class:"card"},Fs=D("",27),Cs={class:"card"},ds=D("",14),us={class:"card"},Bs=D("",7),fs=JSON.parse('{"title":"节点图 Graph","description":"","frontmatter":{},"headers":[],"relativePath":"components/graph/index.md","filePath":"components/graph/index.md"}'),gs={name:"components/graph/index.md"},Ds=Object.assign(gs,{setup(u){return(s,r)=>(f(),b("div",null,[ns,t("div",as,[C(j)]),ls,t("div",ps,[C(H)]),os,t("div",es,[C(Y)]),ts,t("div",cs,[C(N)]),rs,t("div",Es,[C($)]),ys,t("div",is,[C(X)]),Fs,t("div",Cs,[C(Q)]),ds,t("div",us,[C(ss)]),Bs]))}});export{fs as __pageData,Ds as default};
